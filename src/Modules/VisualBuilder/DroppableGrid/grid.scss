:root {
  --grid-size: 20px; /* Define the grid size variable */
}


  .grid-main-container {
    flex-grow: 1;
    flex-direction: column;
    height: inherit;
    display: flex;

    .tray-pane {
      right: 0;                     
      transform: translateY(-50%);
      //background-color: #f5f5f5; // Optional: Add background color for visibility
      padding: 10px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); // Optional: Add a shadow for better visual effect
      z-index: 10;        // Ensure it's on top of the grid
    }

    .zoom-controls{
      position: absolute; // Absolute positioning inside the editor-class
      display: flex;
      flex-direction: row;
      right: 0;           // Stick to the right
      top: 0;           // Center it vertically
      transform: translateY(0%); // Correct the centering (since top: 50% places the top of the element at 50%)
      width: 150px;       // Set a fixed width for the tray
      background-color: #f5f5f5; // Optional: Add background color for visibility
      padding: 10px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); // Optional: Add a shadow for better visual effect
      z-index: 10;        // Ensure it's on top of the grid
      justify-content: flex-end;
    }

    .grid-container {
      width: 100%;
      overflow: scroll; /* Enable scrolling */
      flex-grow: 1;
      display: flex;
      justify-content: flex-end;

      .grid {
        display: flex;
        flex-direction: row;
        justify-content: flex-end;
        padding: 20px 199px;
        border: 1px dashed #ccc;
        position: relative;
        /* Set a very large size to simulate an "infinite" grid */
        width: 100%;
        height: 100%;
      
        /* Keep the background grid pattern */
        background-image: repeating-linear-gradient(
        to left,
        transparent,
        transparent calc(var(--grid-size) - 1px),
        #ddd calc(var(--grid-size) - 1px),
        #ddd var(--grid-size)
      ),
      repeating-linear-gradient(
        to top,
        transparent,
        transparent calc(var(--grid-size) - 1px),
        #ddd calc(var(--grid-size) - 1px),
        #ddd var(--grid-size)
      );
        background-size: var(--grid-size) var(--grid-size);
        background-position: right bottom;
        pointer-events:auto;
        user-select: none;
      }
    }
    
    
  }
  
  